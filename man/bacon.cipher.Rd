% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CIPH-fun.R
\name{bacon.cipher}
\alias{bacon.cipher}
\title{Bacon Cipher.}
\usage{
bacon.cipher(ms, ..., code)
}
\arguments{
\item{ms}{The message to be encrypted/decrypted in a single character object. The Raw message can be written in upper cases and spaces, but no numbers. The encrypted message needs to be written in upper cases and without spaces.}

\item{...}{Utilized for the decoy message, that is, the message in which the bacon code is hidden in the upper and lower cases. Needs to be purely characters, and have a length equal or less than the total of the bacon code.}

\item{code}{It refers to the transformation that will be made to the message: "encrypt" and "decrypt".}
}
\value{
For the encrypted message, returns a list of two: "Bacon Code" which is a single character object with all the bacon code; and "Decoy Message", which is a single character object with the hidden bacon code. For the decrypted message, a character vector is returned with the decrypted message.
}
\description{
A substitution cipher, in which every letter has a special, five-letter, code, except for i-j and u-v, which share a single value respectively. The final message is conveyed in the upper (represents "B" in bacon code) and lower (represents "A" in bacon code) of a decoy message.
}
\examples{
#The decoy message can be shorter than the total of letters obtained from
#the bacon code. The rest of letters will be randomly generated.
bacon.cipher(ms = "Hello World", "This is not an encrypted Message", code = "encrypt")

bacon.cipher(ms = "thISIsnOtanEnCryPtEdmESsAGeTtpgEHvLQatjerWxPpgfvMC", code = "decrypt")
}
